/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.matchbox.client.forms;

import de.matchbox.client.Control;
import de.matchbox.communication.MessageObject;
import de.matchbox.communication.classmodels.RoomModel;
import de.matchbox.communication.contentobjects.client.CreateRoomContentObject;
import de.matchbox.communication.contentobjects.client.JoinRoomContentObject;
import de.matchbox.communication.enumeration.MessageType;
import de.matchbox.communication.shared.abiturklassen.List;
import java.awt.Toolkit;
import javax.swing.DefaultListModel;

/**
 *
 * @author Name
 */
public class FrmLobby extends javax.swing.JFrame {

    /**
     * Creates new form FrmLobby
     */
    private final Control control;
    private DefaultListModel lobby;
    private final RoomCreationDialog roomCreationDialog;

    public FrmLobby(Control pControl) {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/de/matchbox/client/Resources/icon.png")));
        this.control = pControl;
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        this.jConectRoom.setEnabled(false);
        this.roomCreationDialog = new RoomCreationDialog(this, true, this.control);

        this.control.send(new MessageObject(MessageType.LIST_ROOMS));

        jConectRoom.setOpaque(false);
        jConectRoom.setBorderPainted(false);
        
        jCreateRoom.setOpaque(false);
        jCreateRoom.setBorderPainted(false);
        
        jButtonAktulisieren.setOpaque(false);
        jButtonAktulisieren.setBorderPainted(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jRoomList = new javax.swing.JList();
        jConectRoom = new javax.swing.JButton();
        jCreateRoom = new javax.swing.JButton();
        jButtonAktulisieren = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MatchBox");
        setMinimumSize(new java.awt.Dimension(545, 650));
        setPreferredSize(new java.awt.Dimension(545, 650));
        getContentPane().setLayout(null);

        jRoomList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRoomListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jRoomList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 514, 545);

        jConectRoom.setText("Connect");
        jConectRoom.setToolTipText("");
        jConectRoom.setBorderPainted(false);
        jConectRoom.setInheritsPopupMenu(true);
        jConectRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConectRoomActionPerformed(evt);
            }
        });
        getContentPane().add(jConectRoom);
        jConectRoom.setBounds(10, 570, 73, 23);

        jCreateRoom.setText("Create Room");
        jCreateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCreateRoomActionPerformed(evt);
            }
        });
        getContentPane().add(jCreateRoom);
        jCreateRoom.setBounds(100, 570, 95, 23);

        jButtonAktulisieren.setText("Refresh");
        jButtonAktulisieren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAktulisierenActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAktulisieren);
        jButtonAktulisieren.setBounds(220, 570, 71, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/matchbox/client/Resources/hd-wallpapers-grey-background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 550, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jConectRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConectRoomActionPerformed
        if (!jRoomList.isSelectionEmpty()) {
            this.control.send(new MessageObject(MessageType.JOIN_ROOM, new JoinRoomContentObject(((RoomModel) (jRoomList.getSelectedValue())).getId())));
        }
    }//GEN-LAST:event_jConectRoomActionPerformed

    private void jCreateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCreateRoomActionPerformed
        roomCreationDialog.setVisible(true);
    }//GEN-LAST:event_jCreateRoomActionPerformed

    private void jRoomListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRoomListMouseClicked
        if (!jRoomList.isSelectionEmpty()) {
            jConectRoom.setEnabled(true);
        }
    }//GEN-LAST:event_jRoomListMouseClicked

    private void jButtonAktulisierenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAktulisierenActionPerformed
        this.control.send(new MessageObject(MessageType.LIST_ROOMS));
    }//GEN-LAST:event_jButtonAktulisierenActionPerformed

    public void setRooms(List rooms) {
        this.lobby = new DefaultListModel();
        rooms.toFirst();
        while (rooms.hasAccess()) {
            lobby.addElement((RoomModel) rooms.getObject());
            rooms.next();
        }
        jRoomList.setModel(lobby);
    }

    public void createRoom(String pName) {
        this.control.send(new MessageObject(MessageType.CREATE_ROOM, new CreateRoomContentObject(pName)));
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAktulisieren;
    private javax.swing.JButton jConectRoom;
    private javax.swing.JButton jCreateRoom;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JList jRoomList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
